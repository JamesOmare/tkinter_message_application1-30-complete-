#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Feb 17, 2022 03:46:56 PM EAT  platform: Linux

from posixpath import split
from re import sub
from flask import redirect, url_for
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from tkinter import *
import requests
import threading
import time

import tkinter.messagebox



from PIL import Image, ImageTk
import json

import requests


import  penzi_support
import backend





class Toplevel1:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("690x680+271+26")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("PENZI")
        top.configure(background="#d8d8d8")
        top.configure(highlightcolor="#ffffff")

        self.top = top
       
        # user_sender = self.Text1.get("1.0","end-1c")
        # user_message = self.Text2.get("1.0", "end-1c")
        # user_receiver = self.Text3.get("1.0","end-1c")

        def delete():
                if self.Text1.get("1.0","end-1c") == "" and self.Text2.get("1.0","end-1c") == "" and self.Text3.get("1.0","end-1c")  == "" and self.Message1.get:
                        tkinter.messagebox.showerror("FAILURE", "FIELDS ARE ALREADY EMPTY")
                else:
                        self.Text1.delete("1.0","end-1c")
                        self.Text2.delete("1.0","end-1c")
                        self.Text3.delete("1.0","end-1c")
                        self.Message1.config(text = "")

        
        def submit():

               
                activation_header = "PENZI"
                start_header = "start"
                details_header = "details"
                user_sender = self.Text1.get("1.0","end-1c")
                user_message = self.Text2.get("1.0","end-1c")
                user_receiver = self.Text3.get("1.0","end-1c")

                unfiltered_message = [user_message]

                if user_message == activation_header:
                        penzi_number = 1
                        headers = {'Content-type': 'application/json', 'Acceept': 'text/plain'}
                        response1 = requests.get(f"http://127.0.0.1:8001/get_penzi_message_start/{penzi_number}", headers=headers)
                        response1 = response1.text
                        self.Message1.config(text=response1)

                else:

                        try:
                                for item in unfiltered_message:
                                        header, item1, item2, item3, item4, item5 = item.split("#")

                        except:
                                tkinter.messagebox.showerror(
                                        "FAIL!", "INVALID FORMAT!\n TRY USING THE FORMAT \nstart#name#age#gender#male#county#town ")

                        else:
                        
                                if header == start_header:
                                        data = json.dumps({"header": header, "sender_number": user_sender, "message": user_message,
                                                        "receiver_shortcode": user_receiver})
                                        headers = {'Content-type': 'application/json',
                                                'Acceept': 'text/plain'}
                                        requests.post(
                                        "http://127.0.0.1:8001/post_start", headers=headers, data=data, )
                                        # tkinter.messagebox.showinfo(
                                        # "SUCCESS", "MESSAGE HAS BEEN SUBMITTED SUCCESSFULLY")
                                        def process():
                                                while True:
                                                        if user_sender:
                                                                message1 = requests.get(f"http://127.0.0.1:8001/get_message/{user_sender}")                    
                                                                message1 = message1.text
                                                                unfiltered_m = [message1]
                                                                for item in unfiltered_m:
                                                                        header, name, age, gender, county, town = item.split("#")
                                                                data = json.dumps({"name": name, "age": age, "gender": gender, "county": county, "town": town})
                                                                headers = {'Content-type': 'application/json',
                                                                        'Acceept': 'text/plain'}
                                                                requests.post(
                                                                        "http://127.0.0.1:8001/post_start_user", headers = headers, data = data
                                                                )
                                                                self.Message1.config(text = "")
                                                                time.sleep(30)
                                                                penzi_number = 2
                                                                headers = {'Content-type': 'application/json', 'Acceept': 'text/plain'}
                                                                response2 = requests.get(f"http://127.0.0.1:8001/get_penzi_message_start/{penzi_number}", headers=headers)
                                                                response2 = response2.text
                                                                self.Message1.config(text=response2)
                                                                time.sleep(60)
                                                                penzi_number = 4
                                                                headers = {'Content-type': 'application/json', 'Acceept': 'text/plain'}
                                                                response3 = requests.get(f"http://127.0.0.1:8001/get_penzi_message_start/{penzi_number}", headers=headers)
                                                                response3 = response3.text
                                                                self.Message1.config(text=response3)
                                                                tkinter.messagebox.showinfo("SUCCESS", "YOU HAVE BEEN REGISTERED")
                                                                break

                                                               
                                                                        
                                
                        
                                                        else:
                                                                break

                                

                                        process()
                                       

                                else:
                                        tkinter.messagebox.showerror("ERROR", "INVALID HEADER")


        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.029, rely=0.676, height=53, width=133)
        self.Button1.configure(background="#27d897")
        self.Button1.configure(borderwidth="2")
        self.Button1.configure(compound='left')
        self.Button1.configure(font="-family {Roboto Mono} -size 11 -weight bold")
        self.Button1.configure(foreground="#ffffff")
        self.Button1.configure(text='''CLEAR''')
        self.Button1.configure(command=delete)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(relx=0.257, rely=0.646, relheight=0.322
                , relwidth=0.723)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(text='''---''')

        self.Label4 = tk.Label(self.Labelframe1)
        self.Label4.place(relx=0.08, rely=0.228, height=38, width=176
                , bordermode='ignore')
        self.Label4.configure(anchor='w')
        self.Label4.configure(compound='left')
        self.Label4.configure(font="-family {Roboto Mono} -size 10")
        self.Label4.configure(text='''Enter Sender Number:''')

        self.Label5 = tk.Label(self.Labelframe1)
        self.Label5.place(relx=0.186, rely=0.594, height=25, width=126
                , bordermode='ignore')
        self.Label5.configure(anchor='w')
        self.Label5.configure(compound='left')
        self.Label5.configure(cursor="fleur")
        self.Label5.configure(font="-family {Roboto Mono} -size 10")
        self.Label5.configure(text='''Enter Message:''')

        self.Label6 = tk.Label(self.Labelframe1)
        self.Label6.place(relx=0.02, rely=0.822, height=25, width=210
                , bordermode='ignore')
        self.Label6.configure(anchor='w')
        self.Label6.configure(compound='left')
        self.Label6.configure(font="-family {Roboto Mono} -size 10")
        self.Label6.configure(text='''Enter Receiver shortcode:''')

        self.Text1 = tk.Text(self.Labelframe1)
        self.Text1.place(relx=0.441, rely=0.183, relheight=0.155, relwidth=0.513
                , bordermode='ignore')
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(selectbackground="blue")
        self.Text1.configure(selectforeground="white")
        self.Text1.configure(wrap="word")

        self.Text2 = tk.Text(self.Labelframe1)
        self.Text2.place(relx=0.441, rely=0.411, relheight=0.292, relwidth=0.513
                , bordermode='ignore')
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(selectbackground="blue")
        self.Text2.configure(selectforeground="white")
        self.Text2.configure(wrap="word")

        self.Text3 = tk.Text(self.Labelframe1)
        self.Text3.place(relx=0.441, rely=0.776, relheight=0.155, relwidth=0.513
                , bordermode='ignore')
        self.Text3.configure(background="white")
        self.Text3.configure(font="TkTextFont")
        self.Text3.configure(selectbackground="blue")
        self.Text3.configure(selectforeground="white")
        self.Text3.configure(wrap="word")

        def new_thread():
                threading.Thread(target=submit).start()

        
        self.Button2 = tk.Button(self.top)
        self.Button2.place(relx=0.032, rely=0.871, height=53, width=133)
        self.Button2.configure(background="#27d897")
        self.Button2.configure(command=new_thread)
        self.Button2.configure(borderwidth="2")
        self.Button2.configure(compound='left')
        self.Button2.configure(font="-family {Roboto Mono} -size 11 -weight bold")
        self.Button2.configure(foreground="#ffffff")
        self.Button2.configure(text='''SEND''')

        self.Message1 = tk.Message(self.top)
        self.Message1.place(relx=0.255, rely=0.368, relheight=0.269
                , relwidth=0.709)
        self.Message1.configure(background="#ffffff")
        self.Message1.configure(padx="1")
        self.Message1.configure(pady="1")
        self.Message1.configure(width=475)
        

        self.Canvas1 = tk.Canvas(self.top)
        self.Canvas1.place(relx=0.0, rely=-0.015, relheight=0.09, relwidth=1.001)

        self.Canvas1.configure(background="#27d897")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="blue")
        self.Canvas1.configure(selectforeground="white")

        self.Label1 = tk.Label(self.Canvas1)
        self.Label1.place(relx=0.434, rely=0.328, height=21, width=75)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#27d891")
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {Roboto Mono} -size 12 -weight bold")
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(text='''WELCOME''')

        self.Custom1 = penzi_support.Custom(self.top)
        self.Custom1.place(relx=0.159, rely=0.221, relheight=0.084
                , relwidth=0.125)
        


        
        



        

def start_up():
    penzi_support.main()

if __name__ == '__main__':
    penzi_support.main()




